itself
blur 1 0.5
rotate 15 -15 10 -10 5 -5 45 -45 75 -75 85 -85
rotate 90 -90 180
shear random 15 -15

total = no * 8
C * 8 = 2864

365
blur 0 0.3 0.6 0.9 x4 1460
scale 0 0.8 0.9 x3 4380
rotate 0 5 -5 10 -10 15 -15 80 -80 90 -90 180 + shear x13 56940

489
blur 0 0.3 0.6 0.9 x4 1956
noise 0 0.4 0.6 x3 5868
scale 0 0.6 0.8 0.9 x4 23472
rotate 0 180 x2 46944
rotate 0 5 -5 done
10 -10 done
15 -15 done
45 -45 done
80 -80 done
85 -85 done
90 + 
shear x15 704160

Ask:
i am currently collecting data of mahjong tiles. Below are the diversities of images i can think of. help me determine if this variation is necessary, or the yolo model is capable of handle/recognize the difference. correct me if i am wrong.

different lighting, dark and light
different size, take the photo in different distance, making the tiles larger or smaller inside the photo
different rotation, take photo of tiles in various rotation
different mahjong set, various mahjong set can be slightly different in styles
different shear level, take the photo in various position, not just top down shot
add anything if i miss anything

one more question, if i combine these variation, the number of combination will be very large. for example, there is 5 variations and each variation have 2 possibilties, then i will need to take 2^5 = 32 images. it will become a tedious task , is this the correct approach?

Answer:
Your proposed variations in data collection would indeed contribute to a more robust dataset. Each of the variations you listed would help the model generalize better across different real-world situations. Here are some thoughts on how each variation might contribute:

Different Lighting: This is important. In real-world scenarios, the model would have to handle different lighting conditions, so training it with images taken under various illuminations would help.

Different Sizes: This is also important as objects in real-world images can often appear at various scales.

Different Rotations: This is beneficial, especially if in the application, the tiles can be viewed from different angles.

Different Mahjong Sets: This is crucial if you want your model to recognize tiles from multiple sets. The more variety in styles the model has seen, the better it can generalize to unseen sets.

Different Shear Levels: Taking images not just from top-down view but also from different angles would help the model recognize tiles even when they're not perfectly aligned.

The variations you've listed are quite comprehensive. One additional variation you could consider is occlusion, where part of the tile may be hidden or obscured by another object. This is a common situation in real-world images and could increase the robustness of your model.

Your concern about the number of combinations is valid. Collecting images for every combination of conditions might be impractical. One way to make this process more manageable is to use data augmentation techniques. Data augmentation artificially creates training images through different ways of processing or combination of images, such as rotation, scaling, shearing, or lighting changes. This can be done programmatically during the training process, thereby saving a lot of effort in the data collection phase.

Lastly, it's important to note that a balanced dataset is crucial for training a robust model. Try ensuring that each class (i.e., each unique tile) has approximately the same number of examples in the dataset. If some classes are underrepresented in the training data, the model might perform poorly on these classes.